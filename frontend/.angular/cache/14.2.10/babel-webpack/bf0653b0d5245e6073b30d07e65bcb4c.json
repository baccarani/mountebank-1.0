{"ast":null,"code":"import { FormBuilder } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"../services/imposter.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"../predicates/predicates.component\";\nimport * as i9 from \"../responses/responses.component\";\n\nfunction AddDependencyComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-predicates\", 20);\n    i0.ɵɵlistener(\"editUpdate\", function AddDependencyComponent_div_42_Template_app_predicates_editUpdate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.editUpdate($event));\n    })(\"deleteUpdate\", function AddDependencyComponent_div_42_Template_app_predicates_deleteUpdate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteUpdate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const predicate_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"index\", i_r3)(\"predicate\", predicate_r2);\n  }\n}\n\nfunction AddDependencyComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-responses\", 21);\n    i0.ɵɵlistener(\"editUpdate\", function AddDependencyComponent_div_51_Template_app_responses_editUpdate_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.editUpdate($event));\n    })(\"deleteResponseUpdate\", function AddDependencyComponent_div_51_Template_app_responses_deleteResponseUpdate_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.deleteResponseUpdate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const response_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"responseIndex\", i_r8)(\"response\", response_r7)(\"hideCloseButton\", ctx_r1.hideCloseButton);\n  }\n}\n\nexport let AddDependencyComponent = /*#__PURE__*/(() => {\n  class AddDependencyComponent {\n    constructor(http, fb, matDialogRef, imposterService) {\n      this.http = http;\n      this.fb = fb;\n      this.matDialogRef = matDialogRef;\n      this.imposterService = imposterService;\n      this.protocols = ['http', 'https', 'tcp'];\n      this.methods = ['GET', 'POST', 'PUT'];\n      this.stubs = [];\n      this.predicates = [];\n      this.responses = [];\n      this.showEdit = [];\n      this.hideCloseButton = true;\n      this.index = 0;\n      this.indexResponse = 0;\n      this.dependencyForm = this.fb.group({\n        name: [''],\n        port: [''],\n        protocol: ['']\n      });\n    }\n\n    ngOnInit() {\n      this.imposterService.onResetPredicates();\n      this.imposterService.onResetResponses();\n\n      if (this.imposterService.onGetPredicates().length === 0) {\n        this.imposterService.onAddPredicate({\n          operator: '',\n          method: '',\n          path: '',\n          newpath: '',\n          data: '',\n          newOperator: '',\n          query: ''\n        });\n      }\n\n      if (this.imposterService.onGetResponses().length === 0) {\n        this.imposterService.onAddResponse({\n          statusCode: '',\n          headers: '',\n          body: ''\n        });\n      }\n\n      this.predicates = this.imposterService.onGetPredicates();\n      this.responses = this.imposterService.onGetResponses();\n    }\n\n    predicateUpdate(form) {\n      this.showEdit[form.index] = true;\n      this.predicates[form.index] = form.value;\n    }\n\n    closeModal() {\n      this.matDialogRef.close();\n    }\n\n    onSubmit() {\n      this.imposterService.onCreateImposter(this.dependencyForm.value);\n      this.matDialogRef.close();\n    }\n\n    addPredicate() {\n      this.imposterService.onAddPredicate({\n        operator: '',\n        method: '',\n        path: '',\n        newpath: '',\n        data: '',\n        newOperator: '',\n        query: ''\n      });\n      this.showEdit.push(false);\n      this.predicates = this.imposterService.onGetPredicates();\n    }\n\n    addResponse() {\n      this.imposterService.onAddResponse({\n        statusCode: '',\n        headers: '',\n        body: ''\n      });\n      this.showEdit.push(false);\n      this.responses = this.imposterService.onGetResponses();\n\n      if (this.imposterService.onGetResponses().length > 1) {\n        this.hideCloseButton = false;\n      } else {\n        this.hideCloseButton = true;\n      }\n    }\n\n    addPredicatesResponses() {// this.imposterService.onAddPredicate({operator: '', method: '', path: '', newpath: '', data: '', newOperator: '', query: ''})\n      // this.imposterService.onAddResponse({statusCode: '', headers: '', body: ''})\n      // this.showEdit.push(false);\n      // this.predicates = this.imposterService.onGetPredicates();\n      // this.responses = this.imposterService.onGetResponses();\n      // if (this.imposterService.onGetResponses().length > 1) {\n      //   this.hideCloseButton = false;\n      // } else {\n      //   this.hideCloseButton = true;\n      // }\n    }\n\n    deleteUpdate(index) {\n      let tempPredicates = [];\n\n      for (let i = 0; i < this.predicates.length; i++) {\n        if (i !== index) {\n          tempPredicates.push(this.predicates[i]);\n        }\n      }\n\n      this.predicates = tempPredicates;\n      let tempEdit = [];\n\n      for (let i = 0; i < this.showEdit.length; i++) {\n        if (i !== index) {\n          tempEdit.push(this.showEdit[i]);\n        }\n      }\n\n      this.showEdit = tempEdit;\n      this.imposterService.onDeletePredicate(index);\n    }\n\n    deleteResponseUpdate(responseIndex) {\n      let tempResponses = [];\n\n      for (let i = 0; i < this.responses.length; i++) {\n        if (i !== responseIndex) {\n          tempResponses.push(this.responses[i]);\n        }\n      }\n\n      this.responses = tempResponses;\n      let tempEdit = [];\n\n      for (let i = 0; i < this.showEdit.length; i++) {\n        if (i !== responseIndex) {\n          tempEdit.push(this.showEdit[i]);\n        }\n      }\n\n      this.showEdit = tempEdit;\n      this.imposterService.onDeleteResponse(responseIndex);\n    }\n\n    onDelete() {\n      this.deleteUpdate(this.index);\n    }\n\n    onDeleteResponse() {\n      this.deleteResponseUpdate(this.indexResponse);\n    }\n\n    onDeletePredicatesResponses() {}\n\n  }\n\n  AddDependencyComponent.ɵfac = function AddDependencyComponent_Factory(t) {\n    return new (t || AddDependencyComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.ImposterService));\n  };\n\n  AddDependencyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddDependencyComponent,\n    selectors: [[\"app-add-dependency\"]],\n    inputs: {\n      index: \"index\",\n      indexResponse: \"indexResponse\"\n    },\n    outputs: {\n      hideCloseButton: \"hideCloseButton\"\n    },\n    decls: 59,\n    vars: 4,\n    consts: [[2, \"max-height\", \"85vh\", \"overflow-y\", \"auto\", \"overflow-x\", \"hidden\"], [2, \"font-weight\", \"bold\", \"display\", \"flex\", \"align-items\", \"center\", \"justify-content\", \"space-between\"], [\"mat-icon-button\", \"\", 1, \"close-button\", 3, \"click\"], [\"aria-label\", \"Close modal\"], [1, \"container\", 2, \"max-width\", \"400px\"], [1, \"row\"], [3, \"formGroup\", \"ngSubmit\"], [\"name\", \"protocol\", \"required\", \"\", \"formControlName\", \"protocol\", 1, \"form-control\"], [\"value\", \"http\"], [\"value\", \"https\"], [1, \"form-group\"], [\"type\", \"number\", \"name\", \"port\", \"required\", \"\", \"formControlName\", \"port\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"name\", \"required\", \"\", \"formControlName\", \"name\", 1, \"form-control\"], [2, \"border\", \"1px solid #ccc\", \"border-radius\", \"10px\", \"background-color\", \"#f4f4f4\"], [2, \"display\", \"flex\", \"justify-content\", \"flex-start\", \"align-items\", \"center\", \"padding-right\", \"5px\", \"padding-top\", \"0px\"], [2, \"padding-bottom\", \"30px\", \"padding-left\", \"30px\", \"padding-right\", \"30px\", \"padding-top\", \"20px\"], [2, \"font-weight\", \"bold\"], [4, \"ngFor\", \"ngForOf\"], [2, \"text-decoration\", \"underline\", \"cursor\", \"pointer\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"margin-right\", \"10px\", \"width\", \"100%\", 3, \"disabled\"], [3, \"index\", \"predicate\", \"editUpdate\", \"deleteUpdate\"], [3, \"responseIndex\", \"response\", \"hideCloseButton\", \"editUpdate\", \"deleteResponseUpdate\"]],\n    template: function AddDependencyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \" Add Dependency \");\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AddDependencyComponent_Template_button_click_3_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵelementStart(4, \"mat-icon\", 3);\n        i0.ɵɵtext(5, \"close\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"p\");\n        i0.ɵɵtext(8, \"Fill in the below form to add your dependency.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"div\", 5)(12, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function AddDependencyComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\");\n        i0.ɵɵtext(15, \"Protocol:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 7)(17, \"option\", 8);\n        i0.ɵɵtext(18, \"HTTP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 9);\n        i0.ɵɵtext(20, \"HTTPS\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\", 10)(23, \"label\");\n        i0.ɵɵtext(24, \"Port:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵelementStart(27, \"div\")(28, \"label\");\n        i0.ɵɵtext(29, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"br\")(32, \"hr\");\n        i0.ɵɵelementStart(33, \"h2\");\n        i0.ɵɵtext(34, \"Stubs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 13);\n        i0.ɵɵelement(36, \"div\", 14);\n        i0.ɵɵelementStart(37, \"div\", 15)(38, \"div\")(39, \"div\")(40, \"h3\", 16);\n        i0.ɵɵtext(41, \"Predicates\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(42, AddDependencyComponent_div_42_Template, 2, 2, \"div\", 17);\n        i0.ɵɵelementStart(43, \"a\", 18);\n        i0.ɵɵlistener(\"click\", function AddDependencyComponent_Template_a_click_43_listener() {\n          return ctx.addPredicate();\n        });\n        i0.ɵɵtext(44, \" Add Predicate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"br\")(46, \"br\")(47, \"br\");\n        i0.ɵɵelementStart(48, \"div\")(49, \"h3\", 16);\n        i0.ɵɵtext(50, \"Responses\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(51, AddDependencyComponent_div_51_Template, 2, 3, \"div\", 17);\n        i0.ɵɵelementStart(52, \"a\", 18);\n        i0.ɵɵlistener(\"click\", function AddDependencyComponent_Template_a_click_52_listener() {\n          return ctx.addResponse();\n        });\n        i0.ɵɵtext(53, \" Add Response\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(54, \"br\")(55, \"br\")(56, \"br\");\n        i0.ɵɵelementStart(57, \"button\", 19);\n        i0.ɵɵtext(58, \" Add Dependency \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formGroup\", ctx.dependencyForm);\n        i0.ɵɵadvance(30);\n        i0.ɵɵproperty(\"ngForOf\", ctx.predicates);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.responses);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", !ctx.dependencyForm.valid);\n      }\n    },\n    dependencies: [i5.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i6.MatButton, i7.MatIcon, i2.FormGroupDirective, i2.FormControlName, i8.PredicatesComponent, i9.ResponsesComponent],\n    styles: [\"[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}.modal-dialog[_ngcontent-%COMP%]{max-width:800px}\"]\n  });\n  return AddDependencyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}